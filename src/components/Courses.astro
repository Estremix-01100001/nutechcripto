image.png---
import type { Course } from '../types';
import { SITE_CONFIG } from '../lib/constants';
import { courses } from '../data/courses';
---

<section id="cursos" class="py-16 sm:py-20 lg:py-24" style="background: linear-gradient(90deg, #000000 0%, #111111 50%, #000000 100%);">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Header mejorado -->
    <div class="text-center mb-16">
      <!-- Badge de cursos -->
      <div class="text-center mb-8 mt-16">
        <button class="inline-flex items-center space-x-2 border border-orange-500 text-orange-500 px-6 py-3 rounded-full text-sm font-bold bg-orange-500/10 hover:bg-orange-500 hover:text-white transition-all duration-300">
          <div class="w-2 h-2 bg-orange-500 rounded-full animate-pulse"></div>
          <span>Cursos especializados en IA</span>
        </button>
      </div>
      
      <!-- Filtros de nivel -->
      <div class="text-center mb-12">
        <div class="flex flex-wrap justify-center gap-3 mb-6">
          <button class="filter-btn px-4 py-2 rounded-full text-sm font-bold transition-all duration-300 bg-orange-500 text-white" data-filter="all" onclick="filterCourses('all', 'level')">
            Todos
          </button>
          <button class="filter-btn px-4 py-2 rounded-full text-sm font-bold transition-all duration-300 bg-gray-700 text-white hover:bg-orange-500" data-filter="principiante" onclick="filterCourses('principiante', 'level')">
            Principiante
          </button>
          <button class="filter-btn px-4 py-2 rounded-full text-sm font-bold transition-all duration-300 bg-gray-700 text-white hover:bg-orange-500" data-filter="intermedio" onclick="filterCourses('intermedio', 'level')">
            Intermedio
          </button>
          <button class="filter-btn px-4 py-2 rounded-full text-sm font-bold transition-all duration-300 bg-gray-700 text-white hover:bg-orange-500" data-filter="avanzado" onclick="filterCourses('avanzado', 'level')">
            Avanzado
          </button>
        </div>
        
        <!-- Filtros de modalidad -->
        <div class="flex flex-wrap justify-center gap-3">
          <button class="filter-btn px-4 py-2 rounded-full text-sm font-bold transition-all duration-300 bg-orange-500 text-white" data-filter="modalidad-all" onclick="filterCourses('all', 'modality')">
            Todas las modalidades
          </button>
          <button class="filter-btn px-4 py-2 rounded-full text-sm font-bold transition-all duration-300 bg-gray-700 text-white hover:bg-orange-500" data-filter="en-vivo" onclick="filterCourses('en-vivo', 'modality')">
            En vivo
          </button>
          <button class="filter-btn px-4 py-2 rounded-full text-sm font-bold transition-all duration-300 bg-gray-700 text-white hover:bg-orange-500" data-filter="on-demand" onclick="filterCourses('on-demand', 'modality')">
            On-demand
          </button>
          <button class="filter-btn px-4 py-2 rounded-full text-sm font-bold transition-all duration-300 bg-gray-700 text-white hover:bg-orange-500" data-filter="hibrido" onclick="filterCourses('hibrido', 'modality')">
            Híbrido
          </button>
        </div>
      </div>
    </div>

    <!-- Grid de cursos -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {courses.map((course) => (
        <div class="course-card bg-gray-800 rounded-xl p-4 border border-gray-700 hover:border-orange-400 hover:shadow-lg hover:shadow-orange-400/20 transition-all duration-300 hover:scale-105 cursor-pointer flex flex-col justify-between" data-level={course.level.toLowerCase()} data-modality={course.modality.toLowerCase().replace(' ', '-')}>
          <!-- Header del curso -->
          <div class="mb-4">
            <div class="flex items-center justify-between mb-3">
              <span class={`px-3 py-1 rounded-full text-xs font-semibold text-white ${course.levelColor}`}>
                {course.level}
              </span>
              <div class="flex items-center space-x-1">
                <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-.364-1.118l1.07-3.292z"></path>
                </svg>
                <span class="text-white text-sm font-medium">{course.rating}</span>
              </div>
            </div>
            
            <h3 class="text-white text-lg font-bold mb-2 leading-tight">{course.title}</h3>
            <p class="text-white/70 text-sm leading-relaxed mb-3">{course.description}</p>
            
            <!-- Info del curso -->
            <div class="flex items-center justify-between text-xs text-white/50 mb-3">
              <span>{course.duration}</span>
              <span>{course.students}</span>
              <span>{course.modality}</span>
            </div>
          </div>

          <!-- Características -->
          <ul class="space-y-1 mb-6">
            {course.features.map((feature) => (
              <li class="flex items-center space-x-2 text-white/70 text-sm">
                <svg class="w-3 h-3 text-green-400 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                </svg>
                <span>{feature}</span>
              </li>
            ))}
          </ul>

          <!-- Precio -->
          <div class="mb-4">
            <div class="flex items-baseline space-x-2">
              <span class="text-2xl font-bold text-white">{SITE_CONFIG.currencySymbol}{course.price}</span>
              <span class="text-sm text-white/50 line-through">{SITE_CONFIG.currencySymbol}{course.originalPrice}</span>
            </div>
            <p class="text-xs text-white/50 mt-1">Precio de lanzamiento limitado</p>
          </div>

          <!-- Botones de acción -->
          <div class="space-y-2 mt-auto">
            <button class="w-full bg-orange-500 text-white py-3 px-4 rounded-xl font-medium hover:bg-orange-600 hover:scale-105 transition-all duration-300 text-sm cursor-pointer">
              Inscribirme ahora
            </button>
            <button class="w-full bg-gray-700 text-white py-3 px-4 rounded-xl font-medium hover:bg-orange-500 hover:scale-105 transition-all duration-300 text-sm flex items-center justify-center space-x-2 cursor-pointer">
              <span>Ver temario</span>
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
              </svg>
            </button>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  // Variables globales para mantener el estado de los filtros
  let currentLevelFilter = 'all';
  let currentModalityFilter = 'all';
  
  // Función global para filtrar cursos
  function filterCourses(filter, type) {
    const courseCards = document.querySelectorAll('.course-card');
    const filterButtons = document.querySelectorAll('.filter-btn');
    
    // Actualizar estado del filtro
    if (type === 'level') {
      currentLevelFilter = filter;
    } else if (type === 'modality') {
      currentModalityFilter = filter;
    }
    
    // Actualizar botones activos
    filterButtons.forEach(btn => {
      btn.classList.remove('bg-orange-500', 'text-white');
      btn.classList.add('bg-gray-700', 'text-white');
    });
    
    // Marcar botón activo
    const activeButton = document.querySelector(`[data-filter="${filter}"]`);
    if (activeButton) {
      activeButton.classList.remove('bg-gray-700');
      activeButton.classList.add('bg-orange-500', 'text-white');
    }
    
    // Aplicar filtros
    let visibleCount = 0;
    
    courseCards.forEach((card) => {
      const courseLevel = card.getAttribute('data-level');
      const courseModality = card.getAttribute('data-modality');
      
      let showByLevel = currentLevelFilter === 'all' || courseLevel === currentLevelFilter;
      let showByModality = currentModalityFilter === 'all' || courseModality === currentModalityFilter;
      
      if (showByLevel && showByModality) {
        (card as HTMLElement).style.display = 'flex';
        visibleCount++;
      } else {
        (card as HTMLElement).style.display = 'none';
      }
    });
    
    console.log(`Filtros aplicados: Nivel=${currentLevelFilter}, Modalidad=${currentModalityFilter}, Cursos visibles=${visibleCount}`);
  }
  
  // Hacer la función global
  (window as any).filterCourses = filterCourses;
</script>