---
// Componente de ubicación global
---

<section id="ubicacion" class="py-16 sm:py-20 lg:py-24" style="background: linear-gradient(90deg, #000000 0%, #111111 50%, #000000 100%);">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Badge de ubicación -->
    <div class="text-center mb-12">
      <button class="inline-flex items-center space-x-2 border border-orange-500 text-orange-500 px-6 py-3 rounded-full text-sm font-bold bg-orange-500/10 hover:bg-orange-500 hover:text-white transition-all duration-300">
        <div class="w-2 h-2 bg-orange-500 rounded-full animate-pulse"></div>
        <span>Ubicación</span>
      </button>
    </div>

    <!-- Título principal -->
    <div class="text-center mb-8 sm:mb-10">
      <h2 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-white mb-3 sm:mb-4">
        Ubicación
      </h2>
    </div>

    <!-- Sección de Alcance Global -->
    <div class="mb-8 sm:mb-12">
      <div class="bg-gray-800 rounded-xl p-4 sm:p-6 border border-gray-700 hover:border-orange-400 hover:shadow-lg hover:shadow-orange-400/20 transition-all duration-300 hover:scale-105 cursor-pointer mb-6">
        <div class="text-center mb-4">
          <div class="inline-flex items-center space-x-3 ">
            <div class="w-8 h-8 bg-orange-500 rounded-lg flex items-center justify-center flex-shrink-0 ">
              <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"></path>
              </svg>
            </div>
            <h3 class="text-white text-xl font-semibold">Alcance Global</h3>
          </div>
          <p class="text-white text-base sm:text-lg leading-relaxed text-center">
          Nutech Academy ya impacta en <span class="text-orange-500 font-bold">10 países</span> de Latinoamérica, Europa y Norteamérica: España, México, Perú, Colombia, Argentina, Ecuador, Panamá, República Dominicana y EE. UU.
        </p>
      </div>
    </div>

    <!-- Mapa principal - Ocupa el doble de espacio horizontal -->
    <div class="mb-8">
      <div id="mapa-interactivo" class="bg-gray-800/50 backdrop-blur-sm rounded-2xl p-8 border border-gray-700 hover:border-orange-500/50 transition-all duration-300 cursor-pointer group">
        <div class="text-center mb-6">
          <div class="w-16 h-16 bg-orange-500/20 rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:bg-orange-500/30 transition-colors duration-300">
            <svg class="w-8 h-8 text-orange-500" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
            </svg>
          </div>
          <h3 class="text-white text-2xl font-bold mb-4">Nuestra Presencia Global</h3>
          <p class="text-white/70 text-lg">Haz clic en un país para ver información</p>
        </div>
        
        <div class="relative">
          <div id="world-map-container" class="w-full h-auto rounded-xl">
            <!-- El SVG se cargará aquí dinámicamente -->
          </div>
          
          <!-- Panel de información del país -->
          <div id="country-info" class="absolute top-4 right-4 bg-gray-900/95 backdrop-blur-sm rounded-lg p-4 border border-orange-500/30 max-w-xs opacity-0 transition-all duration-300" style="display: none;">
            <h5 id="country-name" class="text-orange-500 font-bold text-lg mb-2"></h5>
            <p id="country-details" class="text-white text-sm"></p>
          </div>
        </div>
      </div>
    </div>

    <!-- Cards complementarias debajo -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
      <!-- 10 países destacado -->
      <div class="bg-gray-800 backdrop-blur-sm rounded-2xl p-12 border border-gray-400/60 hover:border-orange-500/70 transition-all duration-300 flex items-center justify-center min-h-[300px]">
        <div class="text-center">
          <div class="text-[7rem] font-bold mb-4 orange-gradient-text leading-none">
            10
          </div>
          <div class="text-3xl font-bold text-white mb-3">
            países
          </div>
          <div class="text-lg text-gray-100 font-medium">
            y seguimos creciendo
          </div>
        </div>
      </div>

      <!-- Países operativos -->
      <div class="bg-gray-800 rounded-2xl p-8 border border-gray-700 hover:border-orange-400/50 transition-all duration-300 hover:scale-105 group">
        <div class="text-center mb-8">
          <div class="w-16 h-16 bg-orange-500/20 rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:bg-orange-500/30 transition-colors duration-300">
            <svg class="w-8 h-8 text-orange-500" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
            </svg>
          </div>
          <h3 class="text-white text-xl font-bold mb-4">Países donde operamos</h3>
        </div>
        
        <div class="grid grid-cols-3 gap-3">
          <div class="text-center cursor-pointer hover:scale-110 transition-transform duration-300" onclick="scrollToMapAndShowCountry('ES')">
            <div class="w-12 h-12 bg-white rounded-full flex items-center justify-center text-xl mb-2 shadow-lg hover:shadow-orange-500/50">🇪🇸</div>
            <div class="text-white/70 text-xs">España</div>
          </div>
          <div class="text-center cursor-pointer hover:scale-110 transition-transform duration-300" onclick="scrollToMapAndShowCountry('MX')">
            <div class="w-12 h-12 bg-white rounded-full flex items-center justify-center text-xl mb-2 shadow-lg hover:shadow-orange-500/50">🇲🇽</div>
            <div class="text-white/70 text-xs">México</div>
          </div>
          <div class="text-center cursor-pointer hover:scale-110 transition-transform duration-300" onclick="scrollToMapAndShowCountry('PE')">
            <div class="w-12 h-12 bg-white rounded-full flex items-center justify-center text-xl mb-2 shadow-lg hover:shadow-orange-500/50">🇵🇪</div>
            <div class="text-white/70 text-xs">Perú</div>
          </div>
          <div class="text-center cursor-pointer hover:scale-110 transition-transform duration-300" onclick="scrollToMapAndShowCountry('CO')">
            <div class="w-12 h-12 bg-white rounded-full flex items-center justify-center text-xl mb-2 shadow-lg hover:shadow-orange-500/50">🇨🇴</div>
            <div class="text-white/70 text-xs">Colombia</div>
          </div>
          <div class="text-center cursor-pointer hover:scale-110 transition-transform duration-300" onclick="scrollToMapAndShowCountry('AR')">
            <div class="w-12 h-12 bg-white rounded-full flex items-center justify-center text-xl mb-2 shadow-lg hover:shadow-orange-500/50">🇦🇷</div>
            <div class="text-white/70 text-xs">Argentina</div>
          </div>
          <div class="text-center cursor-pointer hover:scale-110 transition-transform duration-300" onclick="scrollToMapAndShowCountry('US')">
            <div class="w-12 h-12 bg-white rounded-full flex items-center justify-center text-xl mb-2 shadow-lg hover:shadow-orange-500/50">🇺🇸</div>
            <div class="text-white/70 text-xs">EE.UU.</div>
          </div>
          <div class="text-center cursor-pointer hover:scale-110 transition-transform duration-300" onclick="scrollToMapAndShowCountry('EC')">
            <div class="w-12 h-12 bg-white rounded-full flex items-center justify-center text-xl mb-2 shadow-lg hover:shadow-orange-500/50">🇪🇨</div>
            <div class="text-white/70 text-xs">Ecuador</div>
          </div>
          <div class="text-center cursor-pointer hover:scale-110 transition-transform duration-300" onclick="scrollToMapAndShowCountry('PA')">
            <div class="w-12 h-12 bg-white rounded-full flex items-center justify-center text-xl mb-2 shadow-lg hover:shadow-orange-500/50">🇵🇦</div>
            <div class="text-white/70 text-xs">Panamá</div>
          </div>
          <div class="text-center cursor-pointer hover:scale-110 transition-transform duration-300" onclick="scrollToMapAndShowCountry('DO')">
            <div class="w-12 h-12 bg-white rounded-full flex items-center justify-center text-xl mb-2 shadow-lg hover:shadow-orange-500/50">🇩🇴</div>
            <div class="text-white/70 text-xs">R. Dominicana</div>
          </div>
        </div>
      </div>
    </div>

  </div>
</section>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const mapContainer = document.getElementById('world-map-container');
    const countryInfo = document.getElementById('country-info');
    const countryName = document.getElementById('country-name');
    const countryDetails = document.getElementById('country-details');
    
    // Países operativos con sus datos y códigos de país
    const countriesData = {
      'US': { name: 'Estados Unidos', info: 'Sede principal en Silicon Valley. Más de 200 estudiantes activos.', codes: ['US', 'usa', 'united-states', 'estados-unidos', 'united states', 'america', 'us', 'united', 'states'] },
      'ES': { name: 'España', info: 'Centro en Madrid. Expansión europea exitosa.', codes: ['ES', 'spain', 'esp', 'españa'] },
      'AR': { name: 'Argentina', info: 'Oficina en Buenos Aires. 120+ estudiantes activos.', codes: ['AR', 'argentina', 'arg'] },
      'MX': { name: 'México', info: 'Centro de operaciones en Ciudad de México. 150+ estudiantes.', codes: ['MX', 'mexico', 'mex'] },
      'EC': { name: 'Ecuador', info: 'Centro en Quito. 80+ profesionales formados.', codes: ['EC', 'ecuador', 'ecu'] },
      'PE': { name: 'Perú', info: 'Sede en Lima. Líder en formación de IA en el país.', codes: ['PE', 'peru', 'per'] },
      'PA': { name: 'Panamá', info: 'Hub regional en Ciudad de Panamá. 60+ estudiantes.', codes: ['PA', 'panama', 'pan'] },
      'CO': { name: 'Colombia', info: 'Oficina en Bogotá. Crecimiento del 300% en el último año.', codes: ['CO', 'colombia', 'col'] },
      'DO': { name: 'República Dominicana', info: 'Centro en Santo Domingo. 40+ profesionales formados.', codes: ['DO', 'dominican-republic', 'dom'] }
    };
    
    // Función optimizada para cargar y colorear el SVG
    async function loadAndColorMap() {
      try {
        // Intentar múltiples rutas para el SVG
        const possiblePaths = [
          '/nutechcripto/images/world.svg',
          '/images/world.svg',
          '/public/images/world.svg'
        ];
        
        let svgText = '';
        let success = false;
        
        for (const path of possiblePaths) {
          try {
            const response = await fetch(path);
            if (response.ok) {
              svgText = await response.text();
              success = true;
              break;
            }
          } catch (e) {
            continue;
          }
        }
        
        if (!success) {
          throw new Error('No se pudo cargar el SVG desde ninguna ruta');
        }
        
        // Crear un div temporal para parsear el SVG
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = svgText;
        const svgElement = tempDiv.querySelector('svg');
        
        if (!svgElement) {
          throw new Error('No se encontró el elemento SVG');
        }
        
        // Aplicar estilos al SVG
        svgElement.style.width = '100%';
        svgElement.style.height = 'auto';
        svgElement.style.cursor = 'pointer';
        
        // Función optimizada para verificar si un país es operativo
        function isOperationalCountry(path) {
          const id = path.getAttribute('id') || '';
          const classList = path.getAttribute('class') || '';
          const title = path.getAttribute('title') || '';
          
          const lowerId = id.toLowerCase();
          const lowerClass = classList.toLowerCase();
          const lowerTitle = title.toLowerCase();
          
          // Buscar coincidencias con países operativos
          for (const [key, country] of Object.entries(countriesData)) {
            for (const code of country.codes) {
              const lowerCode = code.toLowerCase();
              
              // Coincidencias exactas
              if (lowerId === lowerCode || 
                  lowerId === lowerCode + '-path' ||
                  lowerId === lowerCode + '_path' ||
                  lowerClass === lowerCode ||
                  lowerTitle === lowerCode ||
                  lowerTitle === country.name.toLowerCase()) {
                return { isOperational: true, countryKey: key };
              }
              
              // Para Estados Unidos, buscar coincidencias parciales
              if (key === 'US' && (
                lowerId.includes('usa') ||
                lowerId.includes('united') ||
                lowerId.includes('america') ||
                lowerTitle.includes('usa') ||
                lowerTitle.includes('united') ||
                lowerTitle.includes('america') ||
                lowerClass.includes('united states') ||
                lowerClass.includes('usa')
              )) {
                return { isOperational: true, countryKey: key };
              }
            }
          }
          
          return { isOperational: false, countryKey: null };
        }
        
        // Función para aplicar estilos a países operativos
        function applyOperationalStyles(path, countryKey) {
          path.style.fill = '#2563eb';
          path.style.stroke = '#1d4ed8';
          path.style.strokeWidth = '1';
          path.style.transition = 'all 0.3s ease';
          path.classList.add('operational-country');
          
          // Evento de click
          path.addEventListener('click', function(e) {
            e.stopPropagation();
            const country = countriesData[countryKey];
            if (country && countryName && countryDetails && countryInfo) {
              countryName.textContent = country.name;
              countryDetails.textContent = country.info;
              countryInfo.style.display = 'block';
              countryInfo.style.opacity = '1';
              
              // Resaltar temporalmente el país
              this.style.filter = 'drop-shadow(0 0 20px rgba(37, 99, 235, 0.8)) brightness(1.3)';
              setTimeout(() => {
                this.style.filter = '';
              }, 2000);
            }
          });
          
          // Efecto hover
          path.addEventListener('mouseenter', function() {
            this.style.fill = '#ffffff';
            this.style.stroke = '#1d4ed8';
            this.style.strokeWidth = '2';
          });
          
          path.addEventListener('mouseleave', function() {
            this.style.fill = '#2563eb';
            this.style.stroke = '#1d4ed8';
            this.style.strokeWidth = '1';
          });
        }
        
        // Función para aplicar estilos a países no operativos
        function applyNonOperationalStyles(path) {
          path.style.fill = '#6b7280';
          path.style.stroke = '#4b5563';
          path.style.strokeWidth = '0.5';
          path.style.opacity = '0.6';
          path.style.filter = 'none';
          path.classList.remove('operational-country');
        }
        
        // Procesar todos los paths del SVG
        const paths = svgElement.querySelectorAll('path, g');
        
        paths.forEach((path) => {
          const { isOperational, countryKey } = isOperationalCountry(path);
          
          if (isOperational && countryKey) {
            applyOperationalStyles(path, countryKey);
          } else {
            applyNonOperationalStyles(path);
          }
        });
        
        // Limpiar el contenedor e insertar el SVG
        if (mapContainer) {
          mapContainer.innerHTML = '';
          mapContainer.appendChild(svgElement);
        }
        
      } catch (error) {
        console.error('Error cargando el mapa:', error);
        // Fallback: mostrar imagen estática
        if (mapContainer) {
          mapContainer.innerHTML = `
            <div class="flex items-center justify-center h-64 bg-gray-800 rounded-xl">
              <div class="text-center">
                <div class="w-16 h-16 bg-orange-500/20 rounded-2xl flex items-center justify-center mx-auto mb-4">
                  <svg class="w-8 h-8 text-orange-500" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                  </svg>
                </div>
                <h3 class="text-white text-lg font-bold mb-2">Mapa Interactivo</h3>
                <p class="text-white/70 text-sm">Presencia global en 9 países</p>
              </div>
            </div>
          `;
        }
      }
    }
    
    // Función para actualizar países operativos
    (window as any).updateOperationalCountries = function(newCountries: any) {
      Object.assign(countriesData, newCountries);
      loadAndColorMap(); // Recargar el mapa con nuevos países
    };
    
    // Cargar el mapa al inicializar
    loadAndColorMap();
    
    // Ocultar información al hacer clic fuera
    document.addEventListener('click', function(e) {
      const target = e.target as HTMLElement;
      if (!target.closest('#world-map-container') && !target.closest('#country-info')) {
        countryInfo.style.opacity = '0';
        setTimeout(() => {
          countryInfo.style.display = 'none';
        }, 300);
      }
    });
    
  });

  // Función global optimizada para navegar desde países al mapa
  (window as any).scrollToMapAndShowCountry = function(countryCode: string) {
    // Validar que el código de país sea válido
    if (!countryCode || typeof countryCode !== 'string') {
      console.error('❌ Código de país inválido:', countryCode);
      return;
    }
    
    const mapSection = document.getElementById('mapa-interactivo');
    const countryInfo = document.getElementById('country-info');
    const countryName = document.getElementById('country-name');
    const countryDetails = document.getElementById('country-details');
    
    // Datos de países (sincronizados con el objeto principal)
    const countriesData = {
      'US': { name: 'Estados Unidos', info: 'Sede principal en Silicon Valley. Más de 200 estudiantes activos.' },
      'ES': { name: 'España', info: 'Centro en Madrid. Expansión europea exitosa.' },
      'AR': { name: 'Argentina', info: 'Oficina en Buenos Aires. 120+ estudiantes activos.' },
      'MX': { name: 'México', info: 'Centro de operaciones en Ciudad de México. 150+ estudiantes.' },
      'EC': { name: 'Ecuador', info: 'Centro en Quito. 80+ profesionales formados.' },
      'PE': { name: 'Perú', info: 'Sede en Lima. Líder en formación de IA en el país.' },
      'PA': { name: 'Panamá', info: 'Hub regional en Ciudad de Panamá. 60+ estudiantes.' },
      'CO': { name: 'Colombia', info: 'Oficina en Bogotá. Crecimiento del 300% en el último año.' },
      'DO': { name: 'República Dominicana', info: 'Centro en Santo Domingo. 40+ profesionales formados.' }
    };
    
    // Validar que el país existe en los datos
    const country = countriesData[countryCode];
    if (!country) {
      console.error('❌ País no encontrado:', countryCode);
      return;
    }
    
    // Validar que los elementos del DOM existen
    if (!mapSection) {
      console.error('❌ No se encontró el elemento del mapa');
      return;
    }
    
    if (!countryName || !countryDetails || !countryInfo) {
      console.error('❌ No se encontraron los elementos del panel de información');
      return;
    }
    
    try {
      // Desplazar al mapa con scroll suave
      mapSection.scrollIntoView({
        behavior: 'smooth',
        block: 'center'
      });
      
      // Mostrar información del país después del scroll
      setTimeout(() => {
        try {
          countryName.textContent = country.name;
          countryDetails.textContent = country.info;
          countryInfo.style.display = 'block';
          countryInfo.style.opacity = '1';
          
          // Resaltar temporalmente el mapa
          mapSection.style.transform = 'scale(1.02)';
          mapSection.style.boxShadow = '0 0 20px rgba(249, 115, 22, 0.5)';
          mapSection.style.transition = 'all 0.3s ease';
          
          // Restaurar el mapa después de un tiempo
          setTimeout(() => {
            mapSection.style.transform = 'scale(1)';
            mapSection.style.boxShadow = '';
          }, 1000);
          
        } catch (error) {
          console.error('❌ Error al mostrar información del país:', error);
        }
      }, 500);
      
    } catch (error) {
      console.error('❌ Error al navegar al mapa:', error);
    }
  };
</script>
<style>
  /* Estilos optimizados para el mapa interactivo */
  .operational-country {
    transition: all 0.3s ease;
    cursor: pointer;
    filter: drop-shadow(0 0 8px rgba(37, 99, 235, 0.5)) 
            drop-shadow(0 0 16px rgba(29, 78, 216, 0.4));
    animation: pulse-glow 2s ease-in-out infinite alternate;
  }
  
  .operational-country:hover {
    filter: drop-shadow(0 0 12px rgba(255, 255, 255, 0.7)) 
            drop-shadow(0 0 24px rgba(37, 99, 235, 0.6))
            brightness(1.1);
    animation: none;
    transform: scale(1.05);
  }
  
  #world-map-container {
    position: relative;
    overflow: hidden;
  }
  
  #world-map-container svg {
    width: 100%;
    height: auto;
    border-radius: 0.75rem;
    display: block;
  }
  
  #world-map-container path {
    transition: all 0.3s ease;
  }
  
  /* Contenedor del mapa con efectos optimizados */
  #mapa-interactivo {
    transform-origin: center;
    will-change: transform;
    transition: all 0.3s ease;
  }
  
  #mapa-interactivo:hover {
    transform: scale(1.02);
  }
  
  /* Panel de información del país */
  #country-info {
    z-index: 10;
    pointer-events: none;
  }
  
  #country-info.show {
    pointer-events: auto;
  }
  
  /* Animación de pulso para países operativos */
  @keyframes pulse-glow {
    0% {
      filter: drop-shadow(0 0 6px rgba(37, 99, 235, 0.4)) 
              drop-shadow(0 0 12px rgba(29, 78, 216, 0.3));
    }
    100% {
      filter: drop-shadow(0 0 10px rgba(37, 99, 235, 0.6)) 
              drop-shadow(0 0 20px rgba(29, 78, 216, 0.5));
    }
  }
  
  /* Gradiente naranja con animación visible */
  .orange-gradient-text {
    background: linear-gradient(135deg, #ffffff, #fbbf24, #f97316, #ea580c, #c2410c, #ea580c, #f97316, #fbbf24, #ffffff);
    background-size: 400% 400%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: orangeGradientShift 3s ease-in-out infinite;
    text-shadow: 
      0 0 8px rgba(249, 115, 22, 0.6),
      0 2px 4px rgba(0, 0, 0, 0.8),
      0 4px 8px rgba(0, 0, 0, 0.6);
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.8));
  }
  
  @keyframes orangeGradientShift {
    0% {
      background-position: 0% 50%;
      text-shadow: 
        0 0 12px rgba(255, 255, 255, 0.8),
        0 0 8px rgba(249, 115, 22, 0.6),
        0 2px 4px rgba(0, 0, 0, 0.8),
        0 4px 8px rgba(0, 0, 0, 0.6);
    }
    25% {
      background-position: 25% 50%;
      text-shadow: 
        0 0 10px rgba(251, 191, 36, 0.7),
        0 0 6px rgba(249, 115, 22, 0.8),
        0 2px 4px rgba(0, 0, 0, 0.8),
        0 4px 8px rgba(0, 0, 0, 0.6);
    }
    50% {
      background-position: 100% 50%;
      text-shadow: 
        0 0 8px rgba(249, 115, 22, 0.9),
        0 0 12px rgba(234, 88, 12, 0.7),
        0 2px 4px rgba(0, 0, 0, 0.8),
        0 4px 8px rgba(0, 0, 0, 0.6);
    }
    75% {
      background-position: 75% 50%;
      text-shadow: 
        0 0 10px rgba(251, 191, 36, 0.7),
        0 0 6px rgba(249, 115, 22, 0.8),
        0 2px 4px rgba(0, 0, 0, 0.8),
        0 4px 8px rgba(0, 0, 0, 0.6);
    }
    100% {
      background-position: 0% 50%;
      text-shadow: 
        0 0 12px rgba(255, 255, 255, 0.8),
        0 0 8px rgba(249, 115, 22, 0.6),
        0 2px 4px rgba(0, 0, 0, 0.8),
        0 4px 8px rgba(0, 0, 0, 0.6);
    }
  }
  
  /* Responsive para el mapa */
  @media (max-width: 768px) {
    #world-map-container svg {
      max-height: 300px;
    }
    
    .operational-country {
      animation: none;
    }
  }
</style>

