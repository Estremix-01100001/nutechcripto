---
import type { Testimonial } from '../types';
import { testimonials } from '../data/testimonials';
---

<section id="testimonios" class="py-16 sm:py-20 lg:py-24 relative overflow-hidden" style="background: linear-gradient(90deg, #000000 0%, #0a0a0a 50%, #000000 100%);">
  
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-30">
    <!-- Header mejorado -->
    <div class="text-center mb-8 sm:mb-12">
      <button class="inline-flex items-center space-x-2 border border-orange-500 text-orange-500 px-6 py-3 rounded-full text-sm font-bold bg-orange-500/10 hover:bg-orange-500 hover:text-white transition-all duration-300 mb-6 sm:mb-8">
        <div class="w-2 h-2 bg-orange-500 rounded-full animate-pulse"></div>
        <span>Historias de transformación real</span>
      </button>

      <h2 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-white mb-6 sm:mb-8">
        Lo que dicen nuestros <span class="text-orange-500">estudiantes</span>
      </h2>
      
      <p class="text-lg sm:text-xl text-white/80 max-w-4xl mx-auto leading-relaxed">
        Nuestros estudiantes no solo aprenden IA, la aplican y transforman sus carreras profesionales.
      </p>
    </div>


    <!-- Bucle infinito de testimonios -->
    <div class="relative">
      <!-- Contenedor del bucle infinito -->
      <div class="overflow-hidden">
        <div id="testimonialInfinite" class="flex animate-scroll-testimonials">
          <!-- Testimonios originales -->
          {testimonials.map((testimonial, index) => (
            <div class="w-full sm:w-1/2 lg:w-1/3 xl:w-1/4 flex-shrink-0 px-3">
              <div class="bg-gray-800 rounded-2xl p-8 border border-gray-700 hover:border-orange-400/30 transition-all duration-300 shadow-2xl hover:shadow-orange-400/20 group h-full hover:scale-105 cursor-pointer">
                <!-- Header del testimonio -->
                <div class="flex items-start justify-between mb-6">
                  <div class="flex items-center space-x-4">
                    <div class="w-16 h-16 rounded-full overflow-hidden flex-shrink-0 ring-2 ring-orange-500/30 group-hover:ring-orange-500/60 transition-all duration-300">
                      <img 
                        src={testimonial.image} 
                        alt={`Foto de perfil de ${testimonial.name}, ${testimonial.role} en ${testimonial.company}`}
                        class="w-full h-full object-cover"
                        loading="lazy"
                        decoding="async"
                        width="64"
                        height="64"
                        onerror="this.src='https://ui-avatars.com/api/?name='+encodeURIComponent(this.alt)+'&background=6b7280&color=fff&size=150&bold=1'"
                      />
                    </div>
                    <div>
                      <h3 class="text-white font-bold text-lg">{testimonial.name}</h3>
                      <p class="text-orange-400 text-sm font-medium">{testimonial.role}</p>
                      <p class="text-white/50 text-sm">{testimonial.company}</p>
                    </div>

                  </div>
                  <div class="text-6xl text-orange-500/20 font-bold">"</div>
                </div>

                <!-- Rating -->
                <div class="flex items-center space-x-1 mb-3">
                  {Array.from({ length: testimonial.rating }).map((_, i) => (
                    <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.783.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
        </svg>
                  ))}
                </div>

                <!-- Achievement tag -->
                <div class="mb-6">
                  <span class="inline-block bg-gradient-to-r from-orange-500/20 to-orange-600/20 text-orange-400 text-sm font-bold px-4 py-2 rounded-full border border-orange-500/40 shadow-lg">
                    ✨ {testimonial.achievement}
                  </span>
                </div>

                <!-- Quote -->
                <p class="text-white/80 text-sm leading-relaxed mb-6 font-medium">
                  "{testimonial.quote}"
                </p>

                <!-- Tags -->
                <div class="flex flex-wrap gap-2">
                  {testimonial.tags.map((tag, tagIndex) => {
                    const colors = ['bg-blue-500/20 text-blue-400', 'bg-green-500/20 text-green-400', 'bg-purple-500/20 text-purple-400'];
                    return (
                      <span class={`text-xs font-medium px-2 py-1 rounded ${colors[tagIndex % colors.length]}`}>
                        {tag}
                      </span>
                    );
                  })}
                </div>
              </div>
            </div>
          ))}
          
          <!-- Testimonios duplicados para el bucle infinito -->
          {testimonials.map((testimonial, index) => (
            <div class="w-full sm:w-1/2 lg:w-1/3 xl:w-1/4 flex-shrink-0 px-3">
              <div class="bg-gray-800 rounded-2xl p-8 border border-gray-700 hover:border-orange-400/30 transition-all duration-300 shadow-2xl hover:shadow-orange-400/20 group h-full hover:scale-105 cursor-pointer">
                <!-- Header del testimonio -->
                <div class="flex items-start justify-between mb-6">
                  <div class="flex items-center space-x-4">
                    <div class="w-16 h-16 rounded-full overflow-hidden flex-shrink-0 ring-2 ring-orange-500/30 group-hover:ring-orange-500/60 transition-all duration-300">
                      <img 
                        src={testimonial.image} 
                        alt={`Foto de perfil de ${testimonial.name}, ${testimonial.role} en ${testimonial.company}`}
                        class="w-full h-full object-cover"
                        loading="lazy"
                        decoding="async"
                        width="64"
                        height="64"
                        onerror="this.src='https://ui-avatars.com/api/?name='+encodeURIComponent(this.alt)+'&background=6b7280&color=fff&size=150&bold=1'"
                      />
                    </div>
                    <div>
                      <h3 class="text-white font-bold text-lg">{testimonial.name}</h3>
                      <p class="text-orange-400 text-sm font-medium">{testimonial.role}</p>
                      <p class="text-white/50 text-sm">{testimonial.company}</p>
                    </div>

                  </div>
                  <div class="text-6xl text-orange-500/20 font-bold">"</div>
                </div>

                <!-- Rating -->
                <div class="flex items-center space-x-1 mb-3">
                  {Array.from({ length: testimonial.rating }).map((_, i) => (
                    <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.783.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                    </svg>
                  ))}
                </div>

                <!-- Achievement tag -->
                <div class="mb-6">
                  <span class="inline-block bg-gradient-to-r from-orange-500/20 to-orange-600/20 text-orange-400 text-sm font-bold px-4 py-2 rounded-full border border-orange-500/40 shadow-lg">
                    ✨ {testimonial.achievement}
                  </span>
                </div>

                <!-- Quote -->
                <p class="text-white/80 text-sm leading-relaxed mb-6 font-medium">
                  "{testimonial.quote}"
                </p>

                <!-- Tags -->
                <div class="flex flex-wrap gap-2">
                  {testimonial.tags.map((tag, tagIndex) => {
                    const colors = ['bg-blue-500/20 text-blue-400', 'bg-green-500/20 text-green-400', 'bg-purple-500/20 text-purple-400'];
                    return (
                      <span class={`text-xs font-medium px-2 py-1 rounded ${colors[tagIndex % colors.length]}`}>
                        {tag}
                      </span>
                    );
                  })}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>

    <!-- CTA Button -->
    <div class="text-center mt-12">
      <button class="bg-orange-500 hover:bg-orange-600 text-white px-8 py-4 rounded-full font-semibold transition-all duration-300 flex items-center space-x-2 mx-auto group hover:scale-105 cursor-pointer">
        <span>Únete a nuestros casos de éxito</span>
        <svg class="w-5 h-5 group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </button>
    </div>
  </div>
</section>

<style>
  /* Animación de bucle infinito para testimonios */
  @keyframes scroll-testimonials {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }
  
  .animate-scroll-testimonials {
    animation: scroll-testimonials 15s linear infinite;
  }
  
  .animate-scroll-testimonials:hover {
    animation-play-state: paused;
  }
</style>
</style>
</style>
</style>